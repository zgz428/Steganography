       关键代码部分主要集中在steganography.py文件中，涵盖了图片、音频、视频三种载体的隐写与提取算法实现。
       图片隐写：hide_text_in_image函数首先将待隐藏文本进行UTF-8编码，并在前4个字节添加长度信息，然后将所有字节转换为二进制字符串，逐位嵌入到图片像素的RGB通道最低有效位中。为保证数据安全，系统强制将输出图片保存为PNG格式，避免有损压缩导致的隐写信息丢失。提取时，extract_from_image函数按照相同顺序读取像素最低位，先解析出数据长度，再还原出完整的隐藏信息。
       音频隐写部分，hide_text_in_audio函数对WAV音频的采样点进行最低位修改，提取时则逐位还原出隐藏数据。
       视频隐写则通过OpenCV库读取视频首帧，将其保存为PNG图片后调用图片隐写算法进行处理，并在提取时自动查找对应的PNG载体文件进行信息还原。对于文件隐写，系统将文件内容和文件名封装为JSON对象，并进行Base64编码后作为文本嵌入，提取时自动识别类型并还原为原始文件。
       整个隐写与提取流程均在Flask后端的/encode和/decode接口中实现，前端通过FormData对象实现文件和参数的异步上传，后端根据请求参数自动分发到对应的隐写算法。
       